#version 400 core

in vec3 position;
in vec2 textureCoords;
in vec3 normal;

//out vec3 color;
out vec2 passTextureCoords;
out vec3 surfaceNormal;
out vec3 toLightVector;
out vec3 toCameraVector;

uniform mat4 transformMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform vec3 lightPosition;

void main(void)
{
	vec4 worldPosition = transformMatrix * vec4(position,1.0);

	gl_Position = projectionMatrix * viewMatrix * worldPosition;
	//color = vec3(position.x+0.5,1.0,position.y+0.5);
	passTextureCoords = textureCoords; //FOR TERRAINS ONLY
	
	surfaceNormal = (transformMatrix * vec4(normal, 0.0)).xyz;
	toLightVector = lightPosition - worldPosition.xyz;
	toCameraVector = (inverse(viewMatrix) * vec4(0.0,0.0,0.0,1.0)).xyz - worldPosition.xyz;
}